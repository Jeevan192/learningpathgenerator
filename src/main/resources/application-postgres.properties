# PostgreSQL profile - activate with: --spring.profiles.active=postgres

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://learning-path-db:5432/learning_path_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:lp_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:lp_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# HikariCP settings
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAX_POOL:10}
spring.datasource.hikari.minimum-idle=${HIKARI_MIN_IDLE:2}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT_MS:600000}
spring.datasource.hikari.connection-timeout=${HIKARI_CONN_TIMEOUT_MS:30000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME_MS:1800000}
spring.datasource.hikari.pool-name=LearningHikariCP

# Logging
logging.level.com.example.learningpathgenerator=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# Server
server.port=${SERVER_PORT:8080}

# CORS
spring.web.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true